{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/seed.js","components/seed/SeedIndex.js","components/seed/SeedCreate.js","components/seed/SeedUpdate.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","indexSeeds","SeedIndex","handleDeleteSeed","console","log","deleteSeed","response","seeds","loading","length","seedsJsx","map","seed","Card","style","width","Body","Title","Text","notes","ListGroup","ListGroupItem","season","light","number","favorite","toString","planted","size","onClick","reverse","CreateSeed","handleClick","checked","handleNumberChange","parseInt","onCreateSeed","createSeed","Check","inline","label","as","rows","SeedUpdate","userInput","currState","onUpdateSeed","match","params","updateSeed","showSeed","err","min","App","msgAlerts","filter","msg","uuid","path","SeedCreate","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.adf9bb0c.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst authenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n    <NavLink to='/show-seeds' className='nav-link'>Show Seeds</NavLink>\r\n    <NavLink to='/create-seed' className='nav-link'>Create Seed</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <Fragment>\r\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar bg='primary' variant='dark' expand='md'>\r\n    <Navbar.Brand>\r\n      {/* <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>react-auth-template</Link> */}\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <Navbar.Collapse id='basic-navbar-nav'>\r\n      <Nav className='ml-auto'>\r\n        {user && (\r\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\r\n        )}\r\n        {alwaysOptions}\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\nconst apiUrls = {\n  production: 'https://garden-gnome-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/sign-up/',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        password_confirmation: credentials.passwordConfirmation\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-in/',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n  return axios({\r\n    url: apiUrl + '/change-password/',\r\n    method: 'PATCH',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    },\r\n    data: {\r\n      passwords: {\r\n        old: passwords.oldPassword,\r\n        new: passwords.newPassword\r\n      }\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\nexport const showIndexSuccess = 'Here is the list of seeds.'\r\nexport const showIndexFailure = 'Failed to get the seeds.'\r\nexport const showCreateSeedSuccess = 'Seed created.'\r\nexport const showCreateSeedFailure = 'Seed not created.'\r\nexport const showDeleteSeedSuccess = 'Seed deleted.'\r\nexport const showDeleteSeedFailure = 'Seed not deleted.  Try again.'\r\nexport const showUpdateSeedSuccess = 'Seed information updated.'\r\nexport const showUpdateSeedFailure = 'Seed information not updated.  Try again'\r\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: 'new@password.com',\n      password: '12345'\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// Create Post Request create seed\r\nexport const createSeed = (data, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seeds/',\r\n    method: 'POST',\r\n    data: { seed: data },\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// Index request\r\n// no data, we will need a token\r\nexport const indexSeeds = (user) => {\r\n  return axios({\r\n    // method key sets the HTTP verb/method for this request\r\n    // GET is the default method, so we can include or not up to us\r\n    method: 'GET',\r\n    url: apiUrl + '/seeds/',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// GET /Seed/:id, requires token\r\n// get one seed data\r\nexport const showSeed = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id,\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// DELETE /Seed/:id, requires token\r\n// delete one seed\r\nexport const deleteSeed = (id, user) => {\r\n  console.log('in delete', id)\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id + '/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// PATCH /seed/:id, requires token\r\nexport const updateSeed = (data, id, user) => {\r\n  console.log('update seed api', data, id, user)\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id + '/',\r\n    method: 'patch',\r\n    data: { seed: data },\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedIndex extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    console.log('seed', this.state.seeds)\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const seedsJsx = this.state.seeds.map((seed) => (\r\n      <li key={seed.id}>\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>{seed.name}</Card.Title>\r\n            <Card.Text>Notes: {seed.notes}</Card.Text>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>Type: {seed.type}</ListGroupItem>\r\n            <ListGroupItem>Season: {seed.season}</ListGroupItem>\r\n            <ListGroupItem>Light: {seed.light}</ListGroupItem>\r\n            <ListGroupItem>Number: {seed.number}</ListGroupItem>\r\n            <ListGroupItem>Favorite: {seed.favorite.toString()}</ListGroupItem>\r\n            <ListGroupItem>Planted: {seed.planted.toString()}</ListGroupItem>\r\n          </ListGroup>\r\n          <Card.Body>\r\n            <Link\r\n              to={`/update-seed/${seed.id}`}\r\n              className='btn btn-outline-secondary btn-sm'>\r\n              Update Seed Info\r\n            </Link>\r\n            <Button\r\n              size='sm'\r\n              id={seed.id}\r\n              onClick={this.handleDeleteSeed}\r\n              variant='danger'>\r\n              Delete Seed\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div>\r\n        {/* display seeds with last entry first */}\r\n        <ul>{seedsJsx.reverse()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedIndex)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { createSeed } from '../../api/seed'\r\nimport { showCreateSeedSuccess, showCreateSeedFailure } from '../AutoDismissAlert/messages'\r\n\r\n// create create seed class, constructor and state\r\nclass CreateSeed extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      name: '',\r\n      type: '',\r\n      season: '',\r\n      light: '',\r\n      favorite: false,\r\n      planted: false,\r\n      number: 0,\r\n      notes: ''\r\n    }\r\n  }\r\n\r\n    // changes state of input values\r\n    handleChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n\r\n    handleClick = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.checked\r\n      })\r\n\r\n    handleNumberChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: parseInt(event.target.value)\r\n      })\r\n\r\n    // creates seed on form button click\r\n    onCreateSeed = (event) => {\r\n      // prevent page refresh\r\n      event.preventDefault()\r\n      // destructuring props for use later\r\n      const { msgAlert, history, user } = this.props\r\n      // create seed API call\r\n      console.log('user', user)\r\n      createSeed(this.state, user)\r\n        .then(() =>\r\n          msgAlert({\r\n            heading: 'Seed Created',\r\n            message: showCreateSeedSuccess,\r\n            variant: 'success'\r\n          })\r\n        )\r\n      // redirect to after seed created\r\n        .then((res) => history.push('/show-seeds'))\r\n        // error catch\r\n        .catch((error) => {\r\n          this.setState({ name: '', type: '', season: '', light: '', favorite: false, planted: false, number: 0, notes: '' })\r\n          msgAlert({\r\n            heading: 'Failed with error: ' + error.message,\r\n            message: showCreateSeedFailure,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n\r\n    render () {\r\n      // destructuring state for later use\r\n      const { name, notes, favorite, planted, type, light, season, number } = this.state\r\n      // create create seed form\r\n      return (\r\n        <>\r\n          <div className='row' id='showSeed'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n              <center>\r\n                <h3 className='register'>Create Seed</h3>\r\n              </center>\r\n              <Form onSubmit={this.onCreateSeed}>\r\n                <Form.Group className='mb-3' id='formGridCheckbox'>\r\n                  <Form.Check\r\n                    inline\r\n                    name='favorite'\r\n                    type='checkbox'\r\n                    label='Favorite'\r\n                    value={favorite}\r\n                    onClick={this.handleClick}/>\r\n                  <Form.Check\r\n                    inline\r\n                    type='checkbox'\r\n                    label='Planted'\r\n                    value={planted}\r\n                    onClick={this.handleClick}/>\r\n                </Form.Group>\r\n                <Form.Group controlId='title'>\r\n                  <Form.Label>Seed Name :</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='Seed Name'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Control\r\n                  required\r\n                  name='type'\r\n                  value={type}\r\n                  as='select'\r\n                  onChange={this.handleChange}>\r\n                  <option>Select Seed Type</option>\r\n                  <option value='Flower'>Flower</option>\r\n                  <option value='Vegetable'>Vegetable</option>\r\n                  <option value='Fruit'>Fruit</option>\r\n                </Form.Control>\r\n                <br/>\r\n                <Form.Control\r\n                  required\r\n                  name='light'\r\n                  value={light}\r\n                  as='select'\r\n                  onChange={this.handleChange}>\r\n                  <option>Select Amount of Light Needed</option>\r\n                  <option value='Full Sun'>Full Sun</option>\r\n                  <option value='Partial Shade'>Partial Shade</option>\r\n                  <option value='Full Shade'>Full Shade</option>\r\n                </Form.Control>\r\n                <br/>\r\n                <Form.Control\r\n                  required\r\n                  name='season'\r\n                  value={season}\r\n                  as='select'\r\n                  onChange={this.handleChange}>\r\n                  <option>Select Season to Plant</option>\r\n                  <option value='Winter'>Winter</option>\r\n                  <option value='Spring'>Spring</option>\r\n                  <option value='Summer'>Summer</option>\r\n                  <option value='Fall'>Fall</option>\r\n                </Form.Control>\r\n                <br/>\r\n                <Form.Group controlId='number'>\r\n                  <Form.Label>Number of Seeds</Form.Label>\r\n                  <Form.Control\r\n                    name='number'\r\n                    type='number'\r\n                    value={number}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId='content'>\r\n                  <Form.Label>Notes :</Form.Label>\r\n                  <Form.Control\r\n                    name='notes'\r\n                    value={notes}\r\n                    placeholder='Notes'\r\n                    as='textarea'\r\n                    rows={4}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <br/>\r\n                </Form.Group>\r\n                <div className='d-grid gap-2 col-6 mx-auto'>\r\n                  <Button variant='btn btn-secondary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateSeed)\r\n","import React, { Component } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n// API request\r\nimport { updateSeed, showSeed } from '../../api/seed'\r\nimport { showUpdateSeedSuccess, showUpdateSeedFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n// create class for update seed with constructor and state\r\nclass SeedUpdate extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      seed: {\r\n        name: '',\r\n        type: '',\r\n        season: '',\r\n        light: '',\r\n        favorite: false,\r\n        planted: false,\r\n        number: 0,\r\n        notes: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // on page load\r\n  componentDidMount () {\r\n    // destructuring props for later use\r\n    const { match, user, msgAlert } = this.props\r\n    // show seed API call\r\n    showSeed(match.params.id, user)\r\n      // sets new state of seed\r\n      .then(res => this.setState({ seed: res.data.seed }))\r\n      .catch(err => msgAlert({\r\n        heading: 'Show Seed failed :(',\r\n        message: 'Something went wrong: ' + err.message,\r\n        variant: 'danger'\r\n      }))\r\n  }\r\n\r\n  // handles state change for input\r\n  handleChange = (event) => {\r\n    const userInput = { [event.target.name]: event.target.value }\r\n    this.setState(currState => {\r\n      // \"Spread\" out current seed state key/value pairs\r\n      return { seed: { ...currState.seed, ...userInput } }\r\n    })\r\n  }\r\n\r\n  // changes state of input values\r\n  // handleChange = (event) =>\r\n  //   this.setState({\r\n  //     [event.target.name]: event.target.value\r\n  //   },\r\n  //   console.log('in change', event.target.name, event.target.value))\r\n\r\n    handleClick = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.checked\r\n      },\r\n      console.log('in click', event.target.name, event.target.checked))\r\n\r\n    handleNumberChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      },\r\n      console.log('in number', event.target.name, event.target.value))\r\n\r\n    // updates seed on click\r\n    onUpdateSeed = (event) => {\r\n      // prevent page reload\r\n      event.preventDefault()\r\n      // destructuring props for later use\r\n      const { user, msgAlert, history, match } = this.props\r\n      // updateSeed API call\r\n      console.log('seed state', this.state.seed, match.params.id, user)\r\n      updateSeed(this.state.seed, match.params.id, user)\r\n        .then(() => msgAlert({\r\n          heading: 'Seed Updated!',\r\n          message: showUpdateSeedSuccess,\r\n          variant: 'success'\r\n        }))\r\n        .then(res => history.push('/show-seeds'))\r\n        .catch(() => {\r\n          msgAlert({\r\n            heading: 'Seed update failed :(',\r\n            message: showUpdateSeedFailure,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n\r\n    render () {\r\n      // destructuring state for later use\r\n      const { name, notes, favorite, planted, type, light, season, number } = this.state.seed\r\n      // create create seed form\r\n      return (\r\n        <>\r\n          <div className='row' id='showSeed'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n              <center>\r\n                <h3 className='register'>Update Seed Information</h3>\r\n              </center>\r\n              <Form onSubmit={this.onUpdateSeed}>\r\n                <Form.Group className='mb-3' id='formGridCheckbox'>\r\n                  <Form.Check\r\n                    inline\r\n                    name='favorite'\r\n                    type='checkbox'\r\n                    label='Favorite'\r\n                    value={favorite}\r\n                    onClick={this.handleClick}/>\r\n                  <Form.Check\r\n                    inline\r\n                    type='checkbox'\r\n                    label='Planted'\r\n                    value={planted}\r\n                    onClick={this.handleClick}/>\r\n                </Form.Group>\r\n                <Form.Group controlId='title'>\r\n                  <Form.Label>Seed Name :</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='Seed Name'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Control\r\n                  required\r\n                  name='type'\r\n                  value={type}\r\n                  as='select'\r\n                  onChange={this.handleChange}>\r\n                  <option>Select Seed Type</option>\r\n                  <option value='Flower'>Flower</option>\r\n                  <option value='Vegetable'>Vegetable</option>\r\n                  <option value='Fruit'>Fruit</option>\r\n                </Form.Control>\r\n                <br/>\r\n                <Form.Control\r\n                  required\r\n                  name='light'\r\n                  value={light}\r\n                  as='select'\r\n                  onChange={this.handleChange}>\r\n                  <option>Select Amount of Light Needed</option>\r\n                  <option value='Full Sun'>Full Sun</option>\r\n                  <option value='Partial Shade'>Partial Shade</option>\r\n                  <option value='Full Shade'>Full Shade</option>\r\n                </Form.Control>\r\n                <br/>\r\n                <Form.Control\r\n                  required\r\n                  name='season'\r\n                  value={season}\r\n                  as='select'\r\n                  onChange={this.handleChange}>\r\n                  <option>Select Season to Plant</option>\r\n                  <option value='Winter'>Winter</option>\r\n                  <option value='Spring'>Spring</option>\r\n                  <option value='Summer'>Summer</option>\r\n                  <option value='Fall'>Fall</option>\r\n                </Form.Control>\r\n                <br/>\r\n                <Form.Group controlId='number'>\r\n                  <Form.Label>Number of Seeds</Form.Label>\r\n                  <Form.Control\r\n                    name='number'\r\n                    type='number'\r\n                    min='0'\r\n                    value={number}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <br/>\r\n                <Form.Group controlId='content'>\r\n                  <Form.Label>Notes :</Form.Label>\r\n                  <Form.Control\r\n                    name='notes'\r\n                    value={notes}\r\n                    placeholder='Notes'\r\n                    as='textarea'\r\n                    rows={4}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <br/>\r\n                </Form.Group>\r\n                <div className='d-grid gap-2 col-6 mx-auto'>\r\n                  <Button variant='btn btn-secondary' type='submit'>\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <Link to={'/show-seeds'} className=\"btn btn-primary\">Cancel</Link>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(SeedUpdate)\r\n","/* eslint-disable no-tabs */\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport SeedIndex from './components/seed/SeedIndex'\r\nimport SeedCreate from './components/seed/SeedCreate'\r\nimport SeedUpdate from './components/seed/SeedUpdate'\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n  setUser = (user) => this.setState({ user })\r\n\r\n  clearUser = () => this.setState({ user: null })\r\n\r\n  deleteAlert = (id) => {\r\n    this.setState((state) => {\r\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n    })\r\n  }\r\n\r\n  msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    this.setState((state) => {\r\n      return {\r\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlerts, user } = this.state\r\n\r\n    return (\r\n      <Fragment>\r\n\t      <Header user={user} />\r\n\t      {msgAlerts.map((msgAlert) => (\r\n          <AutoDismissAlert\r\n            key={msgAlert.id}\r\n            heading={msgAlert.heading}\r\n            variant={msgAlert.variant}\r\n            message={msgAlert.message}\r\n            id={msgAlert.id}\r\n            deleteAlert={this.deleteAlert}\r\n          />\r\n        ))}\r\n\t      <main className='container'>\r\n\t        <Route\r\n            path='/sign-up'\r\n            render={() => (\r\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            path='/sign-in'\r\n            render={() => (\r\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\r\n            )}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/sign-out'\r\n            render={() => (\r\n              <SignOut\r\n                msgAlert={this.msgAlert}\r\n                clearUser={this.clearUser}\r\n                user={user}\r\n              />\r\n            )}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/change-password'\r\n            render={() => (\r\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\r\n            )}\r\n          />\r\n          {/* seed routes */}\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            exact path='/show-seeds'\r\n            render={() => <SeedIndex msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            exact path='/create-seed'\r\n            render={() => <SeedCreate msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n          <AuthenticatedRoute\r\n            user={user}\r\n            path='/update-seed/:id'\r\n            render={() => <SeedUpdate msgAlert={this.msgAlert} user={user} />}\r\n          />\r\n        </main>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}