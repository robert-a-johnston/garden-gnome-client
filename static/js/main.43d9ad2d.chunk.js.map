{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/seed.js","components/seed/SeedShowCard.js","components/seed/SeedIndex.js","components/seed/SeedCreate.js","components/seed/SeedUpdate.js","components/garden/GardenIndex.js","components/seed/SeedShowFavorites.js","components/seed/SeedShowVegetables.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","exact","NavDropdown","title","Item","as","NavLink","unauthenticatedOptions","Header","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","showIndexFailure","showDeleteSeedSuccess","showDeleteSeedFailure","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","indexSeeds","deleteSeed","SeedShowCard","season","light","favorite","planted","number","notes","handleDeleteSeed","Card","style","width","bg","Body","Container","color","Text","Title","fontWeight","ListGroup","ListGroupItem","size","onClick","SeedIndex","response","seeds","loading","length","seedsJsx","map","seed","reverse","CreateSeed","handleClick","checked","handleNumberChange","parseInt","onCreateSeed","createSeed","Check","inline","label","min","rows","SeedUpdate","userInput","currState","onUpdateSeed","match","updateSeed","params","showSeed","err","GardenIndex","gardenSeedsJsx","filter","SeedShowFavorites","favoriteSeedsJsx","SeedShowVegetables","vegetableSeedsJsx","App","msgAlerts","msg","uuid","path","SeedCreate","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.43d9ad2d.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nconst authenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink exact to='/garden' className='nav-link'>Show Garden</NavLink>\r\n    <NavLink to='/show-seeds' className='nav-link'>Show Seeds</NavLink>\r\n    <NavLink to='/create-seed' className='nav-link'>Create Seed</NavLink>\r\n    <NavDropdown title=\"Seed Sorter\" id=\"navbarScrollingDropdown\">\r\n      <NavDropdown.Item as={NavLink} to='/favorites'>Your Favorite Seeds</NavDropdown.Item>\r\n      <NavDropdown.Item as={NavLink} to='/vegetables'>Vegetable Seeds</NavDropdown.Item>\r\n    </NavDropdown>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar\r\n    className='topNavbar bg-transparent'\r\n    variant='dark'\r\n    expand='md'>\r\n    <Navbar.Brand>\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <Navbar.Collapse id='basic-navbar-nav'>\r\n      <Nav className='ml-auto'>\r\n        {user && (\r\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\r\n        )}\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\nconst apiUrls = {\n  production: 'https://garden-gnome-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/sign-up/',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        password_confirmation: credentials.passwordConfirmation\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-in/',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n  return axios({\r\n    url: apiUrl + '/change-password/',\r\n    method: 'PATCH',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    },\r\n    data: {\r\n      passwords: {\r\n        old: passwords.oldPassword,\r\n        new: passwords.newPassword\r\n      }\r\n    }\r\n  })\r\n}\r\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'These are the seeds planted in your garden.'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\nexport const showIndexSuccess = 'Here is the list of seeds.'\r\nexport const showIndexFailure = 'Failed to get the seeds.'\r\nexport const showCreateSeedSuccess = 'Seed created.'\r\nexport const showCreateSeedFailure = 'Please select a value for type, season, and light.'\r\nexport const showDeleteSeedSuccess = 'Seed deleted.'\r\nexport const showDeleteSeedFailure = 'Seed not deleted.  Try again.'\r\nexport const showUpdateSeedSuccess = 'Seed information updated.'\r\nexport const showUpdateSeedFailure = 'Seed information not updated.  Try again'\r\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignIn extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: 'someuser@email.com',\r\n      password: '12345'\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignIn = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signIn(this.state)\r\n    .then((res) => setUser(res.data.user))\r\n    // .then(() =>\r\n    //   msgAlert({\r\n    //     heading: 'Sign In Success',\r\n    //     message: signInSuccess,\r\n    //     variant: 'success'\r\n    //   })\r\n    // )\r\n    .then(() => history.push('/garden'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '' })\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <center>\r\n          <Form onSubmit={this.onSignIn}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                placeholder='Enter email'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                placeholder='Password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit'>Submit</Button>\r\n          </Form>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignIn)\r\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h2>Change Password</h2>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// Create Post Request create seed\r\nexport const createSeed = (data, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seeds/',\r\n    method: 'POST',\r\n    data: { seed: data },\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// Index request\r\n// no data, we will need a token\r\nexport const indexSeeds = (user) => {\r\n  return axios({\r\n    // method key sets the HTTP verb/method for this request\r\n    // GET is the default method, so we can include or not up to us\r\n    method: 'GET',\r\n    url: apiUrl + '/seeds/',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// GET /Seed/:id, requires token\r\n// get one seed data\r\nexport const showSeed = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id,\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// DELETE /Seed/:id, requires token\r\n// delete one seed\r\nexport const deleteSeed = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id + '/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// PATCH /seed/:id, requires token\r\nexport const updateSeed = (data, id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id + '/',\r\n    method: 'patch',\r\n    data: { seed: data },\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ListGroup, ListGroupItem, Container } from 'react-bootstrap'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// card for displaying seed information\r\n// used in SeedIndex and GardenIndex\r\nconst SeedShowCard = ({ id, name, type, season, light, favorite, planted, number, notes, handleDeleteSeed }) => (\r\n  <Card\r\n    style={{ width: '18rem' }}\r\n    bg='success'>\r\n    <Card.Body>\r\n      <Container className='d-flex flex-direction-row justify-content-evenly'>\r\n        <div style={ { color: 'yellow' } }>{ favorite === true ? <Card.Text>Favorite</Card.Text> : <p></p>}</div>\r\n        <div style={ { color: 'brown' } }>{ planted === true ? <Card.Text>Planted</Card.Text> : <p></p>}</div>\r\n      </Container>\r\n      <Card.Title style={ { fontWeight: 'bold' } }>{name}</Card.Title>\r\n      <Card.Text>Notes: {notes}</Card.Text>\r\n    </Card.Body>\r\n    <ListGroup className=\"list-group-flush\">\r\n      <ListGroupItem>Type: {type}</ListGroupItem>\r\n      <ListGroupItem>Season: {season}</ListGroupItem>\r\n      <ListGroupItem>Light: {light}</ListGroupItem>\r\n      <ListGroupItem>Number: {number}</ListGroupItem>\r\n    </ListGroup>\r\n    <Card.Body>\r\n      <Link\r\n        to={`/update-seed/${id}`}\r\n        className='btn btn-sm'>\r\n              Update Seed Info\r\n      </Link>\r\n      <Button\r\n        variant='custom'\r\n        size='sm'\r\n        id={id}\r\n        onClick={handleDeleteSeed}>\r\n              Delete Seed\r\n      </Button>\r\n    </Card.Body>\r\n  </Card>\r\n)\r\nexport default SeedShowCard\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\n// import Card from 'react-bootstrap/Card'\r\n// import { ListGroup, ListGroupItem, Container } from 'react-bootstrap'\r\n// import Button from 'react-bootstrap/Button'\r\nimport SeedShowCard from './SeedShowCard'\r\nimport './SeedIndex.css'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedIndex extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  // button on SeedShowCard\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const seedsJsx = this.state.seeds.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='list'>\r\n        {/* display seeds with last entry first */}\r\n        <ul className='d-flex flex-wrap align-content-center list-unstyled'>{seedsJsx.reverse()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedIndex)\r\n","import React, { Component } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { createSeed } from '../../api/seed'\r\nimport { showCreateSeedSuccess, showCreateSeedFailure } from '../AutoDismissAlert/messages'\r\n\r\n// create create seed class, constructor and state\r\nclass CreateSeed extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      name: '',\r\n      type: '',\r\n      season: '',\r\n      light: '',\r\n      favorite: false,\r\n      planted: false,\r\n      number: 0,\r\n      notes: ''\r\n    }\r\n  }\r\n\r\n    // changes state of input values\r\n    handleChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n\r\n    handleClick = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.checked\r\n      })\r\n\r\n    handleNumberChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: parseInt(event.target.value)\r\n      })\r\n\r\n    // creates seed on form button click\r\n    onCreateSeed = (event) => {\r\n      // prevent page refresh\r\n      event.preventDefault()\r\n      // destructuring props for use later\r\n      const { msgAlert, history, user } = this.props\r\n      // create seed API call\r\n      createSeed(this.state, user)\r\n        .then(() =>\r\n          msgAlert({\r\n            heading: 'Seed Created',\r\n            message: showCreateSeedSuccess,\r\n            variant: 'success'\r\n          })\r\n        )\r\n      // redirect to after seed created\r\n        .then((res) => history.push('/show-seeds'))\r\n        // error catch\r\n        .catch((error) => {\r\n          this.setState({ name: '', type: '', season: '', light: '', favorite: false, planted: false, number: 0, notes: '' })\r\n          msgAlert({\r\n            heading: 'Failed with error: ' + error.message,\r\n            message: showCreateSeedFailure,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n\r\n    render () {\r\n      // destructuring state for later use\r\n      const { name, notes, favorite, planted, type, light, season, number } = this.state\r\n      // create create seed form\r\n      return (\r\n        <>\r\n          <div className='row' id='showSeed'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n              <center>\r\n                <h2 className='register'>Create Seed</h2>\r\n                <Form onSubmit={this.onCreateSeed}>\r\n                  <Form.Group className='mb-3' id='formGridCheckbox'>\r\n                    <Form.Check\r\n                      inline\r\n                      name='favorite'\r\n                      type='checkbox'\r\n                      label='Favorite'\r\n                      value={favorite}\r\n                      onClick={this.handleClick}/>\r\n                    <Form.Check\r\n                      inline\r\n                      type='checkbox'\r\n                      label='Planted'\r\n                      value={planted}\r\n                      onClick={this.handleClick}/>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='title'>\r\n                    <Form.Label>Seed Name :</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      name='name'\r\n                      value={name}\r\n                      placeholder='Seed Name'\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <br/>\r\n                  <Form.Control\r\n                    name='type'\r\n                    value={type}\r\n                    as='select'\r\n                    onChange={this.handleChange}>\r\n                    <option>Select Seed Type</option>\r\n                    <option value='Flower'>Flower</option>\r\n                    <option value='Vegetable'>Vegetable</option>\r\n                    <option value='Fruit'>Fruit</option>\r\n                  </Form.Control>\r\n                  <br/>\r\n                  <Form.Control\r\n                    name='light'\r\n                    value={light}\r\n                    as='select'\r\n                    onChange={this.handleChange}>\r\n                    <option>Select Amount of Light Needed</option>\r\n                    <option value='Full Sun'>Full Sun</option>\r\n                    <option value='Partial Shade'>Partial Shade</option>\r\n                    <option value='Full Shade'>Full Shade</option>\r\n                  </Form.Control>\r\n                  <br/>\r\n                  <Form.Control\r\n                    name='season'\r\n                    value={season}\r\n                    as='select'\r\n                    onChange={this.handleChange}>\r\n                    <option>Select Season to Plant</option>\r\n                    <option value='Winter'>Winter</option>\r\n                    <option value='Spring'>Spring</option>\r\n                    <option value='Summer'>Summer</option>\r\n                    <option value='Fall'>Fall</option>\r\n                  </Form.Control>\r\n                  <br/>\r\n                  <Form.Group controlId='number'>\r\n                    <Form.Label>Number of Seeds</Form.Label>\r\n                    <Form.Control\r\n                      name='number'\r\n                      type='number'\r\n                      min='0'\r\n                      value={number}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <br/>\r\n                  <Form.Group controlId='content'>\r\n                    <Form.Label>Notes :</Form.Label>\r\n                    <Form.Control\r\n                      name='notes'\r\n                      value={notes}\r\n                      placeholder='Notes'\r\n                      as='textarea'\r\n                      rows={4}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                  </Form.Group>\r\n                  <div className='d-grid gap-2 col-6 mx-auto'>\r\n                    <Button variant='btn btn-secondary' type='submit'>\r\n                    Submit\r\n                    </Button>\r\n                  </div>\r\n                  <Link to={'/show-seeds'} className=\"btn btn-secondary\">Cancel</Link>\r\n                </Form>\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateSeed)\r\n","import React, { Component } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n// API request\r\nimport { updateSeed, showSeed } from '../../api/seed'\r\nimport { showUpdateSeedSuccess, showUpdateSeedFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n// create class for update seed with constructor and state\r\nclass SeedUpdate extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      seed: {\r\n        name: '',\r\n        type: '',\r\n        season: '',\r\n        light: '',\r\n        favorite: false,\r\n        planted: false,\r\n        number: 0,\r\n        notes: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // on page load\r\n  componentDidMount () {\r\n    // destructuring props for later use\r\n    const { match, user, msgAlert } = this.props\r\n    // show seed API call\r\n    showSeed(match.params.id, user)\r\n      // sets new state of seed\r\n      .then(res => this.setState({ seed: res.data.seed }))\r\n      .catch(err => msgAlert({\r\n        heading: 'Show Seed failed :(',\r\n        message: 'Something went wrong: ' + err.message,\r\n        variant: 'danger'\r\n      }))\r\n  }\r\n\r\n  // handles state change for input\r\n  handleChange = (event) => {\r\n    const userInput = { [event.target.name]: event.target.value }\r\n    this.setState(currState => {\r\n      // \"Spread\" out current seed state key/value pairs\r\n      return { seed: { ...currState.seed, ...userInput } }\r\n    })\r\n  }\r\n\r\n    // changes state of checkboxes favorite, planted\r\n    handleClick = (event) => {\r\n      const userInput = { [event.target.name]: event.target.checked }\r\n      this.setState(currState => {\r\n        return { seed: { ...currState.seed, ...userInput } }\r\n      })\r\n    }\r\n\r\n    // changes number of seeds int\r\n    handleNumberChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n\r\n    // updates seed on click\r\n    onUpdateSeed = (event) => {\r\n      // prevent page reload\r\n      event.preventDefault()\r\n      // destructuring props for later use\r\n      const { user, msgAlert, history, match } = this.props\r\n      // updateSeed API call\r\n      updateSeed(this.state.seed, match.params.id, user)\r\n        .then(() => msgAlert({\r\n          heading: 'Seed Updated!',\r\n          message: showUpdateSeedSuccess,\r\n          variant: 'success'\r\n        }))\r\n        .then(res => history.push('/show-seeds'))\r\n        .catch(() => {\r\n          msgAlert({\r\n            heading: 'Seed update failed :(',\r\n            message: showUpdateSeedFailure,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n\r\n    render () {\r\n      // destructuring state for later use\r\n      const { name, notes, favorite, planted, type, light, season, number } = this.state.seed\r\n      // create create seed form\r\n      return (\r\n        <>\r\n          <div className='row' id='showSeed'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n              <center>\r\n                <h2>Update Seed Information</h2>\r\n              </center>\r\n              <center>\r\n                <Form style={{ width: '20rem', fontWeight: 'bold' }} onSubmit={this.onUpdateSeed}>\r\n                  <Form.Group className='mb-3' id='formGridCheckbox'>\r\n                    <Form.Check\r\n                      inline\r\n                      name='favorite'\r\n                      type='checkbox'\r\n                      label='Favorite'\r\n                      checked={favorite}\r\n                      onClick={this.handleClick}/>\r\n                    <Form.Check\r\n                      inline\r\n                      name='planted'\r\n                      type='checkbox'\r\n                      label='Planted'\r\n                      checked={planted}\r\n                      onClick={this.handleClick}/>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='title'>\r\n                    <Form.Label>Seed Name :</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      name='name'\r\n                      value={name}\r\n                      placeholder='Seed Name'\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <br/>\r\n                  <Form.Control\r\n                    name='type'\r\n                    value={type}\r\n                    as='select'\r\n                    onChange={this.handleChange}>\r\n                    <option>Select Seed Type</option>\r\n                    <option value='Flower'>Flower</option>\r\n                    <option value='Vegetable'>Vegetable</option>\r\n                    <option value='Fruit'>Fruit</option>\r\n                  </Form.Control>\r\n                  <br/>\r\n                  <Form.Control\r\n                    name='light'\r\n                    value={light}\r\n                    as='select'\r\n                    onChange={this.handleChange}>\r\n                    <option>Select Amount of Light Needed</option>\r\n                    <option value='Full Sun'>Full Sun</option>\r\n                    <option value='Partial Shade'>Partial Shade</option>\r\n                    <option value='Full Shade'>Full Shade</option>\r\n                  </Form.Control>\r\n                  <br/>\r\n                  <Form.Control\r\n                    name='season'\r\n                    value={season}\r\n                    as='select'\r\n                    onChange={this.handleChange}>\r\n                    <option>Select Season to Plant</option>\r\n                    <option value='Winter'>Winter</option>\r\n                    <option value='Spring'>Spring</option>\r\n                    <option value='Summer'>Summer</option>\r\n                    <option value='Fall'>Fall</option>\r\n                  </Form.Control>\r\n                  <br/>\r\n                  <Form.Group controlId='number'>\r\n                    <Form.Label>Number of Seeds</Form.Label>\r\n                    <Form.Control\r\n                      name='number'\r\n                      type='number'\r\n                      min='0'\r\n                      value={number}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <br/>\r\n                  <Form.Group controlId='content'>\r\n                    <Form.Label>Notes :</Form.Label>\r\n                    <Form.Control\r\n                      name='notes'\r\n                      value={notes}\r\n                      placeholder='Notes'\r\n                      as='textarea'\r\n                      rows={4}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                  </Form.Group>\r\n                  <div className='d-grid gap-2 col-6 mx-auto'>\r\n                    <Button variant='btn btn-secondary' type='submit'>\r\n                    Submit\r\n                    </Button>\r\n                  </div>\r\n                  <Link to={'/show-seeds'} className=\"btn btn-secondary\">Cancel</Link>\r\n                </Form>\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(SeedUpdate)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedShowCard from '../seed/SeedShowCard'\r\nimport './GardenIndex.css'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass GardenIndex extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const filteredSeedsJsx = this.state.seeds.filter((seed) => seed.planted === true)\r\n    const gardenSeedsJsx = filteredSeedsJsx.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='garden-list'>\r\n        <h1>Seeds In Your Garden</h1>\r\n        {/* display seeds with last entry first */}\r\n        <div>\r\n          <ul className='d-flex flex-wrap align-content-center list-unstyled'>{gardenSeedsJsx.reverse()}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GardenIndex)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedShowCard from './SeedShowCard'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedShowFavorites extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const filteredSeedsJsx = this.state.seeds.filter((seed) => seed.favorite === true)\r\n    const favoriteSeedsJsx = filteredSeedsJsx.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='favorite-list'>\r\n        <h1>Your Favorite Seeds</h1>\r\n        {/* display seeds with last entry first */}\r\n        <div>\r\n          <ul className='d-flex flex-wrap align-content-center list-unstyled'>{favoriteSeedsJsx.reverse()}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedShowFavorites)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedShowCard from './SeedShowCard'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedShowVegetables extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const filteredSeedsJsx = this.state.seeds.filter((seed) => seed.type === 'Vegetable')\r\n    const vegetableSeedsJsx = filteredSeedsJsx.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='vegetable-list'>\r\n        <h1>Your Vegetable Seeds</h1>\r\n        {/* display seeds with last entry first */}\r\n        <div>\r\n          <ul className='d-flex flex-wrap align-content-center list-unstyled'>{vegetableSeedsJsx.reverse()}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedShowVegetables)\r\n","/* eslint-disable no-tabs */\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport SeedIndex from './components/seed/SeedIndex'\r\nimport SeedCreate from './components/seed/SeedCreate'\r\nimport SeedUpdate from './components/seed/SeedUpdate'\r\nimport GardenIndex from './components/garden/GardenIndex'\r\nimport SeedShowFavorites from './components/seed/SeedShowFavorites'\r\nimport SeedShowVegetables from './components/seed/SeedShowVegetables'\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n  setUser = (user) => this.setState({ user })\r\n\r\n  clearUser = () => this.setState({ user: null })\r\n\r\n  deleteAlert = (id) => {\r\n    this.setState((state) => {\r\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n    })\r\n  }\r\n\r\n  msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    this.setState((state) => {\r\n      return {\r\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlerts, user } = this.state\r\n\r\n    return (\r\n      <>\r\n        <h1>Garden Gnome</h1><Fragment>\r\n          <Header user={user} />\r\n          {msgAlerts.map((msgAlert) => (\r\n            <AutoDismissAlert\r\n              key={msgAlert.id}\r\n              heading={msgAlert.heading}\r\n              variant={msgAlert.variant}\r\n              message={msgAlert.message}\r\n              id={msgAlert.id}\r\n              deleteAlert={this.deleteAlert} />\r\n          ))}\r\n          <main className='container'>\r\n            <Route\r\n              path='/sign-up'\r\n              render={() => (\r\n                <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\r\n              )} />\r\n            <Route\r\n              path='/sign-in'\r\n              render={() => (\r\n                <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\r\n              )} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              path='/sign-out'\r\n              render={() => (\r\n                <SignOut\r\n                  msgAlert={this.msgAlert}\r\n                  clearUser={this.clearUser}\r\n                  user={user} />\r\n              )} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              path='/change-password'\r\n              render={() => (\r\n                <ChangePassword msgAlert={this.msgAlert} user={user} />\r\n              )} />\r\n            {/* seed routes */}\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/show-seeds'\r\n              render={() => <SeedIndex msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/create-seed'\r\n              render={() => <SeedCreate msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              path='/update-seed/:id'\r\n              render={() => <SeedUpdate msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/garden'\r\n              render={() => <GardenIndex msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/favorites'\r\n              render={() => <SeedShowFavorites msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/vegetables'\r\n              render={() => <SeedShowVegetables msgAlert={this.msgAlert} user={user} />} />\r\n          </main>\r\n        </Fragment></>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}