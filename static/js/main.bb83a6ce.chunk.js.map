{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/seed.js","components/seed/SeedShowCard.js","components/seed/SeedIndex.js","components/seed/SeedCreateUpdateForm.js","components/seed/SeedCreate.js","components/seed/SeedUpdate.js","components/garden/GardenIndex.js","components/seed/SeedShowFavorites.js","components/seed/SeedShowVegetables.js","components/Weather/Weather.js","api/weather.js","components/Footer.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","NavDropdown","title","Item","as","NavLink","unauthenticatedOptions","Header","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","showIndexFailure","showDeleteSeedSuccess","showDeleteSeedFailure","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","indexSeeds","deleteSeed","SeedShowCard","season","light","favorite","planted","number","notes","handleDeleteSeed","Card","style","width","bg","Body","Container","color","Text","Title","fontWeight","ListGroup","ListGroupItem","size","onClick","SeedIndex","response","seeds","loading","length","seedsJsx","map","seed","reverse","SeedCreateUpdateForm","onCreateSeed","handleClick","handleNumberChange","Check","inline","label","checked","min","rows","CreateSeed","parseInt","createSeed","SeedUpdate","userInput","currState","onUpdateSeed","match","updateSeed","params","showSeed","err","GardenIndex","gardenSeedsJsx","filter","SeedShowFavorites","favoriteSeedsJsx","SeedShowVegetables","vegetableSeedsJsx","Weather","onGetWeather","city","weatherURL","showWeather","country","sys","temperature","main","temp","humidity","conditions","weather","description","viewport","latitude","coord","lat","longitude","lon","Table","hover","Footer","Date","getFullYear","href","App","msgAlerts","msg","uuid","path","exact","SeedCreate","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bb83a6ce.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nconst authenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/create-seed' className='nav-link'>Create Seed</NavLink>\r\n    <NavLink to='/weather' className='nav-link'>Weather</NavLink>\r\n    <NavDropdown title=\"Seed Sorter\" id=\"navbarScrollingDropdown\">\r\n      <NavDropdown.Item as={NavLink} to='/show-seeds'>All Of Your Seeds</NavDropdown.Item>\r\n      <NavDropdown.Item as={NavLink} to='/garden'>Seeds In the Garden</NavDropdown.Item>\r\n      <NavDropdown.Item as={NavLink} to='/favorites'>Your Favorite Seeds</NavDropdown.Item>\r\n      <NavDropdown.Item as={NavLink} to='/vegetables'>Vegetable Seeds</NavDropdown.Item>\r\n    </NavDropdown>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar\r\n    className='topNavbar bg-transparent'\r\n    variant='dark'\r\n    expand='md'>\r\n    <Navbar.Brand>\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <Navbar.Collapse id='basic-navbar-nav'>\r\n      <Nav className='ml-auto m-auto'>\r\n        {user && (\r\n          <span className='navbar-text mr-2' id='add-color'>Welcome, {user.email}</span>\r\n        )}\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\nconst apiUrls = {\n  production: 'https://garden-gnome-api.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n// API connections to backend for all auth routes\r\nexport const signUp = (credentials) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/sign-up/',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        password_confirmation: credentials.passwordConfirmation\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-in/',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n  return axios({\r\n    url: apiUrl + '/change-password/',\r\n    method: 'PATCH',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    },\r\n    data: {\r\n      passwords: {\r\n        old: passwords.oldPassword,\r\n        new: passwords.newPassword\r\n      }\r\n    }\r\n  })\r\n}\r\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'These are the seeds planted in your garden.'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\nexport const showIndexSuccess = 'Here is the list of seeds.'\r\nexport const showIndexFailure = 'Failed to get the seeds.'\r\nexport const showCreateSeedSuccess = 'Seed created.'\r\nexport const showCreateSeedFailure = 'Please select a value for type, season, and light.'\r\nexport const showDeleteSeedSuccess = 'Seed deleted.'\r\nexport const showDeleteSeedFailure = 'Seed not deleted.  Try again.'\r\nexport const showUpdateSeedSuccess = 'Seed information updated.'\r\nexport const showUpdateSeedFailure = 'Seed information not updated.  Try again'\r\nexport const showWeatherFailure = 'Could not get weather. Try again.'\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignUp extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignUp = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signUp(this.state)\r\n    .then(() => signIn(this.state))\r\n    .then((res) => setUser(res.data.user))\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password, passwordConfirmation } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign Up</h3>\r\n        <center>\r\n          <Form onSubmit={this.onSignUp}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                placeholder='Enter email'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Label>Minimum 5 Characters</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                placeholder='Password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='passwordConfirmation'>\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='passwordConfirmation'\r\n                value={passwordConfirmation}\r\n                type='password'\r\n                placeholder='Confirm Password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit'>Submit</Button>\r\n          </Form>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignIn extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignIn = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signIn(this.state)\r\n    .then((res) => setUser(res.data.user))\r\n    // .then(() =>\r\n    //   msgAlert({\r\n    //     heading: 'Sign In Success',\r\n    //     message: signInSuccess,\r\n    //     variant: 'success'\r\n    //   })\r\n    // )\r\n    .then(() => history.push('/garden'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '' })\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <center>\r\n          <Form onSubmit={this.onSignIn}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                placeholder='Enter email'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='password'\r\n                value={password}\r\n                type='password'\r\n                placeholder='Password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit'>Submit</Button>\r\n          </Form>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignIn)\r\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass ChangePassword extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonChangePassword = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, user } = this.props\r\n\r\n  changePassword(this.state, user)\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Change Password Success',\r\n        message: changePasswordSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ oldPassword: '', newPassword: '' })\r\n      msgAlert({\r\n        heading: 'Change Password Failed with error: ' + error.message,\r\n        message: changePasswordFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { oldPassword, newPassword } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h2>Change Password</h2>\r\n        <center>\r\n          <Form onSubmit={this.onChangePassword}>\r\n            <Form.Group controlId='oldPassword'>\r\n              <Form.Label>Old password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='oldPassword'\r\n                value={oldPassword}\r\n                type='password'\r\n                placeholder='Old Password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='newPassword'>\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                name='newPassword'\r\n                value={newPassword}\r\n                type='password'\r\n                placeholder='New Password'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant='primary' type='submit'>Submit</Button>\r\n          </Form>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(ChangePassword)\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\n// Create Post Request create seed\r\nexport const createSeed = (data, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seeds/',\r\n    method: 'POST',\r\n    data: { seed: data },\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// Index request\r\n// no data, we will need a token\r\nexport const indexSeeds = (user) => {\r\n  return axios({\r\n    // method key sets the HTTP verb/method for this request\r\n    // GET is the default method, so we can include or not up to us\r\n    method: 'GET',\r\n    url: apiUrl + '/seeds/',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// GET /Seed/:id, requires token\r\n// get one seed data\r\nexport const showSeed = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id,\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// DELETE /Seed/:id, requires token\r\n// delete one seed\r\nexport const deleteSeed = (id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id + '/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\n// PATCH /seed/:id, requires token\r\nexport const updateSeed = (data, id, user) => {\r\n  return axios({\r\n    url: apiUrl + '/seed/' + id + '/',\r\n    method: 'patch',\r\n    data: { seed: data },\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ListGroup, ListGroupItem, Container } from 'react-bootstrap'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// card for displaying seed information\r\n// used in SeedIndex and GardenIndex\r\nconst SeedShowCard = ({ id, name, type, season, light, favorite, planted, number, notes, handleDeleteSeed }) => (\r\n  <Card\r\n    style={{ width: '18rem' }}\r\n    bg='success'>\r\n    <Card.Body>\r\n      <Container className='d-flex flex-direction-row justify-content-evenly'>\r\n        <div style={ { color: 'yellow' } }>{ favorite === true ? <Card.Text>Favorite</Card.Text> : <p></p>}</div>\r\n        <div style={ { color: 'brown' } }>{ planted === true ? <Card.Text>Planted</Card.Text> : <p></p>}</div>\r\n      </Container>\r\n      <Card.Title style={ { fontWeight: 'bold' } }>{name}</Card.Title>\r\n      <Card.Text>Notes: {notes}</Card.Text>\r\n    </Card.Body>\r\n    <ListGroup className=\"list-group-flush\">\r\n      <ListGroupItem>Type: {type}</ListGroupItem>\r\n      <ListGroupItem>Season: {season}</ListGroupItem>\r\n      <ListGroupItem>Light: {light}</ListGroupItem>\r\n      <ListGroupItem>Number: {number}</ListGroupItem>\r\n    </ListGroup>\r\n    <Card.Body>\r\n      <Link\r\n        to={`/update-seed/${id}`}\r\n        className='btn btn-sm'>\r\n              Update Seed Info\r\n      </Link>\r\n      <Button\r\n        variant='custom'\r\n        size='sm'\r\n        id={id}\r\n        onClick={handleDeleteSeed}>\r\n              Delete Seed\r\n      </Button>\r\n    </Card.Body>\r\n  </Card>\r\n)\r\nexport default SeedShowCard\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\n// import Card from 'react-bootstrap/Card'\r\n// import { ListGroup, ListGroupItem, Container } from 'react-bootstrap'\r\n// import Button from 'react-bootstrap/Button'\r\nimport SeedShowCard from './SeedShowCard'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedIndex extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  // button on SeedShowCard\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    // api call delete seed from database\r\n    deleteSeed(id, user)\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n    // show seeds after delete\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const seedsJsx = this.state.seeds.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='list'>\r\n        {/* display seeds with last entry first */}\r\n        <ul className='d-flex flex-wrap align-content-center list-unstyled'>{seedsJsx.reverse()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedIndex)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// form for creating and updating seeds\r\n// used in SeedCreate and SeedUpdate\r\nconst SeedCreateUpdateForm = ({\r\n  name, type, season, light, favorite, planted, number,\r\n  notes, onCreateSeed, handleClick, handleChange, handleNumberChange\r\n}) => (\r\n  <Form onSubmit={onCreateSeed}>\r\n    <Form.Group className='mb-3' id='formGridCheckbox'>\r\n      <Form.Check\r\n        inline\r\n        name='favorite'\r\n        type='checkbox'\r\n        label='Favorite'\r\n        checked={favorite}\r\n        onClick={handleClick}/>\r\n      <Form.Check\r\n        inline\r\n        name='planted'\r\n        type='checkbox'\r\n        label='Planted'\r\n        checked={planted}\r\n        onClick={handleClick}/>\r\n    </Form.Group>\r\n    <Form.Group controlId='title'>\r\n      <Form.Label>Seed Name :</Form.Label>\r\n      <Form.Control\r\n        required\r\n        name='name'\r\n        value={name}\r\n        placeholder='Seed Name'\r\n        onChange={handleChange}\r\n      />\r\n    </Form.Group>\r\n    <br/>\r\n    <Form.Control\r\n      name='type'\r\n      value={type}\r\n      as='select'\r\n      onChange={handleChange}>\r\n      <option>Select Seed Type</option>\r\n      <option value='Flower'>Flower</option>\r\n      <option value='Vegetable'>Vegetable</option>\r\n      <option value='Fruit'>Fruit</option>\r\n    </Form.Control>\r\n    <br/>\r\n    <Form.Control\r\n      name='light'\r\n      value={light}\r\n      as='select'\r\n      onChange={handleChange}>\r\n      <option>Select Amount of Light Needed</option>\r\n      <option value='Full Sun'>Full Sun</option>\r\n      <option value='Partial Shade'>Partial Shade</option>\r\n      <option value='Full Shade'>Full Shade</option>\r\n    </Form.Control>\r\n    <br/>\r\n    <Form.Control\r\n      name='season'\r\n      value={season}\r\n      as='select'\r\n      onChange={handleChange}>\r\n      <option>Select Season to Plant</option>\r\n      <option value='Winter'>Winter</option>\r\n      <option value='Spring'>Spring</option>\r\n      <option value='Summer'>Summer</option>\r\n      <option value='Fall'>Fall</option>\r\n    </Form.Control>\r\n    <br/>\r\n    <Form.Group controlId='number'>\r\n      <Form.Label>Number of Seeds</Form.Label>\r\n      <Form.Control\r\n        name='number'\r\n        type='number'\r\n        min='0'\r\n        value={number}\r\n        onChange={handleNumberChange}\r\n      />\r\n    </Form.Group>\r\n    <br/>\r\n    <Form.Group controlId='content'>\r\n      <Form.Label>Notes :</Form.Label>\r\n      <Form.Control\r\n        name='notes'\r\n        value={notes}\r\n        placeholder='Notes'\r\n        as='textarea'\r\n        rows={4}\r\n        onChange={handleChange}\r\n      />\r\n      <br/>\r\n    </Form.Group>\r\n    <div className='d-grid gap-2 col-6 mx-auto'>\r\n      <Button variant='btn btn-secondary' type='submit'>\r\n    Submit\r\n      </Button>\r\n    </div>\r\n    <Link to={'/show-seeds'} className=\"btn btn-secondary\">Cancel</Link>\r\n  </Form>\r\n)\r\nexport default SeedCreateUpdateForm\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { createSeed } from '../../api/seed'\r\nimport { showCreateSeedSuccess, showCreateSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedCreateUpdateForm from './SeedCreateUpdateForm'\r\n\r\n// create create seed class, constructor and state\r\nclass CreateSeed extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      name: '',\r\n      type: '',\r\n      season: '',\r\n      light: '',\r\n      favorite: false,\r\n      planted: false,\r\n      number: 0,\r\n      notes: ''\r\n    }\r\n  }\r\n\r\n    // changes state of input values\r\n    handleChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n\r\n    // handles change of state on check-boxes\r\n    handleClick = (event) =>\r\n      this.setState({\r\n        [event.target.name]: event.target.checked\r\n      })\r\n\r\n    // handles change of state on number of seeds\r\n    handleNumberChange = (event) =>\r\n      this.setState({\r\n        [event.target.name]: parseInt(event.target.value)\r\n      })\r\n\r\n    // creates seed on form button click\r\n    onCreateSeed = (event) => {\r\n      // prevent page refresh\r\n      event.preventDefault()\r\n      // destructuring props for use later\r\n      const { msgAlert, history, user } = this.props\r\n      // create seed API call\r\n      createSeed(this.state, user)\r\n        .then(() =>\r\n          msgAlert({\r\n            heading: 'Seed Created',\r\n            message: showCreateSeedSuccess,\r\n            variant: 'success'\r\n          })\r\n        )\r\n      // redirect to after seed created\r\n        .then((res) => history.push('/show-seeds'))\r\n        // error catch\r\n        .catch((error) => {\r\n          this.setState({ name: '', type: '', season: '', light: '', favorite: false, planted: false, number: 0, notes: '' })\r\n          msgAlert({\r\n            heading: 'Failed with error: ' + error.message,\r\n            message: showCreateSeedFailure,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n\r\n    render () {\r\n      // destructuring state for later use\r\n      const { name, notes, favorite, planted, type, light, season, number } = this.state\r\n      // create create seed form\r\n      return (\r\n        <>\r\n          <div className='row' id='showSeed'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n              <center>\r\n                <h2 className='register'>Create Seed</h2>\r\n                <SeedCreateUpdateForm\r\n                  name={name}\r\n                  notes={notes}\r\n                  favorite={favorite}\r\n                  planted={planted}\r\n                  type={type}\r\n                  light={light}\r\n                  season={season}\r\n                  number={number}\r\n                  handleChange={this.handleChange}\r\n                  handleClick={this.handleClick}\r\n                  handleNumberChange={this.handleNumberChange}\r\n                  onCreateSeed={this.onCreateSeed}\r\n                />\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateSeed)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n// API request\r\nimport { updateSeed, showSeed } from '../../api/seed'\r\nimport { showUpdateSeedSuccess, showUpdateSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedCreateUpdateForm from './SeedCreateUpdateForm'\r\n// create class for update seed with constructor and state\r\nclass SeedUpdate extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      seed: {\r\n        name: '',\r\n        type: '',\r\n        season: '',\r\n        light: '',\r\n        favorite: false,\r\n        planted: false,\r\n        number: 0,\r\n        notes: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // on page load\r\n  componentDidMount () {\r\n    // destructuring props for later use\r\n    const { match, user, msgAlert } = this.props\r\n    // show seed API call\r\n    showSeed(match.params.id, user)\r\n      // sets new state of seed\r\n      .then(res => this.setState({ seed: res.data.seed }))\r\n      .catch(err => msgAlert({\r\n        heading: 'Show Seed failed :(',\r\n        message: 'Something went wrong: ' + err.message,\r\n        variant: 'danger'\r\n      }))\r\n  }\r\n\r\n  // handles state change for input\r\n  handleChange = (event) => {\r\n    const userInput = { [event.target.name]: event.target.value }\r\n    this.setState(currState => {\r\n      // \"Spread\" out current seed state key/value pairs\r\n      return { seed: { ...currState.seed, ...userInput } }\r\n    })\r\n  }\r\n\r\n    // changes state of checkboxes favorite and planted\r\n    handleClick = (event) => {\r\n      const userInput = { [event.target.name]: event.target.checked }\r\n      this.setState(currState => {\r\n        return { seed: { ...currState.seed, ...userInput } }\r\n      })\r\n    }\r\n\r\n    // changes number of seeds int\r\n    handleNumberChange = (event) => {\r\n      const userInput = { [event.target.name]: parseInt(event.target.value) }\r\n      this.setState(currState => {\r\n      // \"Spread\" out current seed state key/value pairs\r\n        return { seed: { ...currState.seed, ...userInput } }\r\n      })\r\n    }\r\n\r\n    // updates seed on click\r\n    onUpdateSeed = (event) => {\r\n      // prevent page reload\r\n      event.preventDefault()\r\n      // destructuring props for later use\r\n      const { user, msgAlert, history, match } = this.props\r\n      // updateSeed API call\r\n      updateSeed(this.state.seed, match.params.id, user)\r\n        .then(() => msgAlert({\r\n          heading: 'Seed Updated!',\r\n          message: showUpdateSeedSuccess,\r\n          variant: 'success'\r\n        }))\r\n        .then(res => history.push('/show-seeds'))\r\n        .catch(() => {\r\n          msgAlert({\r\n            heading: 'Seed update failed :(',\r\n            message: showUpdateSeedFailure,\r\n            variant: 'danger'\r\n          })\r\n        })\r\n    }\r\n\r\n    render () {\r\n      // destructuring state for later use\r\n      const { name, notes, favorite, planted, type, light, season, number } = this.state.seed\r\n      // create create seed form\r\n      return (\r\n        <>\r\n          <div className='row' id='showSeed'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n              <center>\r\n                <h2>Update Seed Information</h2>\r\n              </center>\r\n              <center>\r\n                <SeedCreateUpdateForm\r\n                  name={name}\r\n                  notes={notes}\r\n                  favorite={favorite}\r\n                  planted={planted}\r\n                  type={type}\r\n                  light={light}\r\n                  season={season}\r\n                  number={number}\r\n                  handleChange={this.handleChange}\r\n                  handleClick={this.handleClick}\r\n                  handleNumberChange={this.handleNumberChange}\r\n                  onCreateSeed={this.onUpdateSeed}\r\n                />\r\n              </center>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withRouter(SeedUpdate)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedShowCard from '../seed/SeedShowCard'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass GardenIndex extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // create list of seeds\r\n    const filteredSeedsJsx = this.state.seeds.filter((seed) => seed.planted === true)\r\n    const gardenSeedsJsx = filteredSeedsJsx.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='garden-list'>\r\n        <h2>Seeds In Your Garden</h2>\r\n        {/* display seeds with last entry first */}\r\n        <div>\r\n          <ul className='d-flex flex-wrap align-content-center list-unstyled'>{gardenSeedsJsx.reverse()}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(GardenIndex)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedShowCard from './SeedShowCard'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedShowFavorites extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // creates array of seeds filtered by favorite attribute\r\n    const filteredSeedsJsx = this.state.seeds.filter((seed) => seed.favorite === true)\r\n    // displays array of filtered seeds\r\n    const favoriteSeedsJsx = filteredSeedsJsx.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='favorite-list'>\r\n        <h2>Your Favorite Seeds</h2>\r\n        {/* display seeds with last entry first */}\r\n        <div>\r\n          <ul className='d-flex flex-wrap align-content-center list-unstyled'>{favoriteSeedsJsx.reverse()}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedShowFavorites)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { indexSeeds, deleteSeed } from '../../api/seed'\r\nimport { showIndexFailure, showDeleteSeedSuccess, showDeleteSeedFailure } from '../AutoDismissAlert/messages'\r\nimport SeedShowCard from './SeedShowCard'\r\n\r\n// create index of all seed class and constructor with state\r\n// also deletes seeds and sends to update seed page\r\nclass SeedShowVegetables extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      seeds: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  // occurs on page render first time\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n    // API call for index of all seeds\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showIndexFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  // deletes seed on button click\r\n  handleDeleteSeed = (event) => {\r\n    const { user, msgAlert } = this.props\r\n    const id = event.target.id\r\n    deleteSeed(id, user)\r\n    // Redirect to the list of seeds\r\n    // .then(() => history.push('/show-seeds/'))\r\n    indexSeeds(user)\r\n      .then((response) =>\r\n        this.setState({\r\n          seeds: response.data.seeds,\r\n          loading: false\r\n        })\r\n      )\r\n      .then(() =>\r\n        msgAlert({\r\n          heading: 'Deleted seed successfully',\r\n          message: showDeleteSeedSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Delete seed failed :(',\r\n          message: showDeleteSeedFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    // if statement handles the issue when state is null\r\n    // cannot handle initial render with null.\r\n    if (this.state.seeds === null) {\r\n      return 'loading...'\r\n    }\r\n    if (this.state.seeds.length === 0) {\r\n      <h3>No seeds</h3>\r\n    }\r\n\r\n    // filters seeds for vegetable seed type\r\n    const filteredSeedsJsx = this.state.seeds.filter((seed) => seed.type === 'Vegetable')\r\n    // creates list of vegetable seeds\r\n    const vegetableSeedsJsx = filteredSeedsJsx.map((seed) => (\r\n      <li key={seed.id}>\r\n        <SeedShowCard\r\n          key={seed.id}\r\n          id={seed.id}\r\n          name={seed.name}\r\n          type={seed.type}\r\n          season={seed.season}\r\n          light={seed.light}\r\n          favorite={seed.favorite}\r\n          planted={seed.planted}\r\n          number={seed.number}\r\n          notes={seed.notes}\r\n          handleDeleteSeed={this.handleDeleteSeed}\r\n        />\r\n      </li>\r\n    ))\r\n\r\n    return (\r\n      <div className='vegetable-list'>\r\n        <h2>Your Vegetable Seeds</h2>\r\n        {/* display seeds with last entry first */}\r\n        <div>\r\n          <ul className='d-flex flex-wrap align-content-center list-unstyled'>{vegetableSeedsJsx.reverse()}</ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SeedShowVegetables)\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { showWeatherFailure } from '../AutoDismissAlert/messages'\r\nimport './StyleWeather.css'\r\n// import axios from 'axios'\r\nimport { showWeather } from '../../api/weather'\r\n// gets local weather with city and state\r\nclass Weather extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      city: '',\r\n      state: '',\r\n      location: null,\r\n      country: null,\r\n      temperature: null,\r\n      humidity: null,\r\n      conditions: ''\r\n    }\r\n  }\r\n\r\n  // handles change of input fields\r\n  handleChange = (event) =>\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n\r\n  // gets weather for city and state input\r\n  onGetWeather = (event) => {\r\n    event.preventDefault()\r\n    const { msgAlert } = this.props\r\n    const { city, state } = this.state\r\n    // weather api call\r\n    showWeather(city, state)\r\n      .then(res => this.setState({\r\n        location: res.data.name,\r\n        country: res.data.sys.country,\r\n        temperature: res.data.main.temp,\r\n        humidity: res.data.main.humidity,\r\n        conditions: res.data.weather[0].description,\r\n        viewport: {\r\n          latitude: res.data.coord.lat,\r\n          longitude: res.data.coord.lon\r\n        }\r\n      })\r\n      )\r\n      .catch(() =>\r\n        msgAlert({\r\n          heading: 'Index Fail',\r\n          message: showWeatherFailure,\r\n          variant: 'danger'\r\n        })\r\n      )\r\n  }\r\n\r\n  render () {\r\n    const { city, state, location, country, temperature, humidity, conditions } = this.state\r\n    return (\r\n      <>\r\n        <div className='weatherRow'>\r\n          <div className='weatherForm'>\r\n            {/* Weather city state input form */}\r\n            <Form onSubmit={this.onGetWeather}>\r\n              <Form.Group controlId='weather'>\r\n                <Form.Control\r\n                  required\r\n                  type='text'\r\n                  name='city'\r\n                  value={city}\r\n                  placeholder='City'\r\n                  onChange={this.handleChange}\r\n                /><br></br>\r\n              </Form.Group>\r\n              <Form.Group controlId='state'>\r\n                <Form.Control\r\n                  name='state'\r\n                  value={state}\r\n                  type='text'\r\n                  placeholder='Full State Name, No Abbreviations'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Button variant='primary' type='submit'>Get Weather</Button>\r\n            </Form>\r\n          </div>\r\n          <div className='tableContainer'>\r\n            {/* Table with weather values display */}\r\n            <Table className='weatherTable' hover>\r\n              <tbody>\r\n                <tr>\r\n                  <td></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Location: </td>\r\n                  <td>{location}, {country}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Temperature: </td>\r\n                  <td>{temperature} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Humidity: </td>\r\n                  <td>{humidity}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Conditions: </td>\r\n                  <td>{conditions}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Weather\r\n","import axios from 'axios'\r\n// variable store key for api\r\nconst apiId = 'e20a75e27a49a2e8acfee2fcfa0691d1'\r\n// variable to use in api call\r\n// uses city state and units imperial\r\nconst weatherURL = 'https://api.openweathermap.org/data/2.5/weather?q='\r\n\r\n// weather component api call function\r\nexport const showWeather = (city, state) => {\r\n  return axios({\r\n    url: weatherURL + city + ',' + state + '&units=imperial&appid=' + apiId,\r\n    method: 'GET'\r\n  })\r\n}\r\n","import React from 'react'\r\n\r\nconst Footer = () => (\r\n  // footer for link to portfolio\r\n  <div className=\"footer\">\r\n    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://robert-a-johnston.github.io/\"\r\n      target='blank'> View My Portfolio </a>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","/* eslint-disable no-tabs */\r\nimport React, { Component, Fragment } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\n// auth path imports\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\n// seed path imports\r\nimport SeedIndex from './components/seed/SeedIndex'\r\nimport SeedCreate from './components/seed/SeedCreate'\r\nimport SeedUpdate from './components/seed/SeedUpdate'\r\nimport GardenIndex from './components/garden/GardenIndex'\r\nimport SeedShowFavorites from './components/seed/SeedShowFavorites'\r\nimport SeedShowVegetables from './components/seed/SeedShowVegetables'\r\n// weather and footer paths\r\nimport Weather from './components/Weather/Weather'\r\nimport Footer from './components/Footer'\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n  // sets state of user on sign in\r\n  setUser = (user) => this.setState({ user })\r\n\r\n  // removes user state on sign out\r\n  clearUser = () => this.setState({ user: null })\r\n\r\n  deleteAlert = (id) => {\r\n    this.setState((state) => {\r\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n    })\r\n  }\r\n\r\n  // creates message for app\r\n  msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    this.setState((state) => {\r\n      return {\r\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlerts, user } = this.state\r\n\r\n    return (\r\n      <>\r\n        <h1>Garden Gnome</h1><Fragment>\r\n          <Header user={user} />\r\n          <Footer/>\r\n          {msgAlerts.map((msgAlert) => (\r\n            <AutoDismissAlert\r\n              key={msgAlert.id}\r\n              heading={msgAlert.heading}\r\n              variant={msgAlert.variant}\r\n              message={msgAlert.message}\r\n              id={msgAlert.id}\r\n              deleteAlert={this.deleteAlert} />\r\n          ))}\r\n          <main className='container'>\r\n            <Route\r\n              path='/sign-up'\r\n              render={() => (\r\n                <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\r\n              )} />\r\n            <Route\r\n              path='/sign-in'\r\n              render={() => (\r\n                <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\r\n              )} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              path='/sign-out'\r\n              render={() => (\r\n                <SignOut\r\n                  msgAlert={this.msgAlert}\r\n                  clearUser={this.clearUser}\r\n                  user={user} />\r\n              )} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              path='/change-password'\r\n              render={() => (\r\n                <ChangePassword msgAlert={this.msgAlert} user={user} />\r\n              )} />\r\n            {/* CRUD seed routes */}\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/show-seeds'\r\n              render={() => <SeedIndex msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/create-seed'\r\n              render={() => <SeedCreate msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              path='/update-seed/:id'\r\n              render={() => <SeedUpdate msgAlert={this.msgAlert} user={user} />} />\r\n            {/* sorting routes */}\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/garden'\r\n              render={() => <GardenIndex msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/favorites'\r\n              render={() => <SeedShowFavorites msgAlert={this.msgAlert} user={user} />} />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/vegetables'\r\n              render={() => <SeedShowVegetables msgAlert={this.msgAlert} user={user} />} />\r\n            {/* Weather component route */}\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact path='/weather'\r\n              render={() => <Weather msgAlert={this.msgAlert} user={user} />} />\r\n          </main>\r\n        </Fragment></>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}